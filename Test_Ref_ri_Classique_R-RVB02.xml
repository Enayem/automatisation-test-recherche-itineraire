<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="fec97fe4-c3a5-11e6-997e-68f7282d8d3d" activeEnvironment="Default" name="Test_Ref_ri_Classique_PROD" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
	<con:settings/>
	<con:interface xsi:type="con:WsdlInterface" id="fec97fe5-c3a5-11e6-ac61-68f7282d8d3d" wsaVersion="NONE" name="SmartMoveServiceSoapBinding" type="wsdl" bindingName="http://smartmove.ixxi/SmartMoveServiceSoapBinding" soapVersion="1_2" anonymous="optional" definition="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:settings/>
		<con:definitionCache type="TEXT" rootPart="">
			<con:part>
				<con:url/>
				<con:content><![CDATA[
					<wsdl:definitions name="SmartMoveService" targetNamespace="http://smartmove.ixxi/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://smartmove.ixxi/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:types>
    <xs:schema elementFormDefault="unqualified" targetNamespace="http://smartmove.ixxi/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="affectScope" type="tns:affectScope"/>
      <xs:element name="affectedLine" type="tns:affectedLine"/>
      <xs:element name="callPoint" type="tns:callPoint"/>
      <xs:element name="city" type="tns:city"/>
      <xs:element name="direction" type="tns:direction"/>
      <xs:element name="ecoComparator" type="tns:ecoComparator"/>
      <xs:element name="getGroupOfLines" type="tns:getGroupOfLines"/>
      <xs:element name="getGroupOfLinesResponse" type="tns:getGroupOfLinesResponse"/>
      <xs:element name="getItinerary" type="tns:getItinerary"/>
      <xs:element name="getItineraryResponse" type="tns:getItineraryResponse"/>
      <xs:element name="getLineTimeTables" type="tns:getLineTimeTables"/>
      <xs:element name="getLineTimeTablesResponse" type="tns:getLineTimeTablesResponse"/>
      <xs:element name="getLines" type="tns:getLines"/>
      <xs:element name="getLinesResponse" type="tns:getLinesResponse"/>
      <xs:element name="getOperators" type="tns:getOperators"/>
      <xs:element name="getOperatorsResponse" type="tns:getOperatorsResponse"/>
      <xs:element name="getServicePatterns" type="tns:getServicePatterns"/>
      <xs:element name="getServicePatternsResponse" type="tns:getServicePatternsResponse"/>
      <xs:element name="getStatus" type="tns:getStatus"/>
      <xs:element name="getStatusResponse" type="tns:getStatusResponse"/>
      <xs:element name="getStopPlaces" type="tns:getStopPlaces"/>
      <xs:element name="getStopPlacesResponse" type="tns:getStopPlacesResponse"/>
      <xs:element name="getStopPoints" type="tns:getStopPoints"/>
      <xs:element name="getStopPointsResponse" type="tns:getStopPointsResponse"/>
      <xs:element name="getStops" type="tns:getStops"/>
      <xs:element name="getStopsResponse" type="tns:getStopsResponse"/>
      <xs:element name="groupOfLinesResultat" type="tns:groupOfLinesResultat"/>
      <xs:element name="infoMessage" type="tns:infoMessage"/>
      <xs:element name="itineraryResultat" type="tns:itineraryResultat"/>
      <xs:element name="line" type="tns:line"/>
      <xs:element name="lineJourney" type="tns:lineJourney"/>
      <xs:element name="lineTimeTable" type="tns:lineTimeTable"/>
      <xs:element name="lineTimeTablesResultat" type="tns:lineTimeTablesResultat"/>
      <xs:element name="linesResultat" type="tns:linesResultat"/>
      <xs:element name="notice" type="tns:notice"/>
      <xs:element name="objectId" type="tns:objectId"/>
      <xs:element name="operatorsResultat" type="tns:operatorsResultat"/>
      <xs:element name="pairDate" type="tns:pairDate"/>
      <xs:element name="pairIdName" type="tns:pairIdName"/>
      <xs:element name="resolveIds" type="tns:resolveIds"/>
      <xs:element name="resolveIdsResponse" type="tns:resolveIdsResponse"/>
      <xs:element name="resolveIdsResultat" type="tns:resolveIdsResultat"/>
      <xs:element name="riGeoPoint" type="tns:riGeoPoint"/>
      <xs:element name="riInput" type="tns:riInput"/>
      <xs:element name="riItinerary" type="tns:riItinerary"/>
      <xs:element name="searchGeoPoint" type="tns:searchGeoPoint"/>
      <xs:element name="segment" type="tns:segment"/>
      <xs:element name="serviceJourney" type="tns:serviceJourney"/>
      <xs:element name="servicePattern" type="tns:servicePattern"/>
      <xs:element name="servicePatternDetails" type="tns:servicePatternDetails"/>
      <xs:element name="servicePatternsResultat" type="tns:servicePatternsResultat"/>
      <xs:element name="setPerturbations" type="tns:setPerturbations"/>
      <xs:element name="setPerturbationsResponse" type="tns:setPerturbationsResponse"/>
      <xs:element name="situation" type="tns:situation"/>
      <xs:element name="stop" type="tns:stop"/>
      <xs:element name="stopPlace" type="tns:stopPlace"/>
      <xs:element name="stopPlacesResultat" type="tns:stopPlacesResultat"/>
      <xs:element name="stopPoint" type="tns:stopPoint"/>
      <xs:element name="stopPointsResultat" type="tns:stopPointsResultat"/>
      <xs:element name="stopsOnLine" type="tns:stopsOnLine"/>
      <xs:element name="stopsResultat" type="tns:stopsResultat"/>
      <xs:element name="trafficEventRef" type="tns:trafficEventRef"/>
      <xs:element name="transport" type="tns:transport"/>
      <xs:element name="transportSegmentDetails" type="tns:transportSegmentDetails"/>
      <xs:element name="walkSegmentDetails" type="tns:walkSegmentDetails"/>
      <xs:complexType name="getStatus">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="commands" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatusResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getServicePatterns">
        <xs:sequence>
          <xs:element name="date" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="lineId" type="xs:string"/>
          <xs:element minOccurs="0" name="directionId" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getServicePatternsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:servicePatternsResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="servicePatternsResultat">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="servicePatterns" type="tns:servicePatternDetails"/>
          <xs:element maxOccurs="unbounded" name="notes" type="tns:notice"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="servicePatternDetails">
        <xs:sequence>
          <xs:element ref="tns:line"/>
          <xs:element name="direction" type="tns:pairIdName"/>
          <xs:element maxOccurs="unbounded" name="stopPoints" type="tns:stopPoint"/>
          <xs:element maxOccurs="unbounded" name="servicePatternNotes" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="line">
        <xs:sequence>
          <xs:element ref="tns:transport"/>
          <xs:element name="groupOfLines" type="tns:pairIdName"/>
          <xs:element maxOccurs="unbounded" name="directions" type="tns:direction"/>
          <xs:element maxOccurs="unbounded" name="lineNotes" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="flexibleLineNotes" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="code" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="accessibility" type="xs:string" use="required"/>
        <xs:attribute name="flexibleType" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="transport">
        <xs:sequence/>
        <xs:attribute name="mode" type="xs:string" use="required"/>
        <xs:attribute name="subMode" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="pairIdName">
        <xs:sequence/>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="direction">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="notes" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="stopPoint">
        <xs:sequence>
          <xs:element minOccurs="0" ref="tns:city"/>
          <xs:element maxOccurs="unbounded" name="stopPointNotes" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="stopPointInDirectionNotes" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="lines" type="tns:line"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="latitude" type="xs:double" use="required"/>
        <xs:attribute name="longitude" type="xs:double" use="required"/>
        <xs:attribute name="accessibility" type="xs:string" use="required"/>
        <xs:attribute name="spijpStopInStation" type="xs:boolean" use="required"/>
        <xs:attribute name="spijpForBoarding" type="xs:boolean" use="required"/>
        <xs:attribute name="spijpForAlighting" type="xs:boolean" use="required"/>
      </xs:complexType>
      <xs:complexType name="city">
        <xs:sequence/>
        <xs:attribute name="inseeCode" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="notice">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="id" type="xs:string" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="getItinerary">
        <xs:sequence>
          <xs:element name="user" type="xs:string"/>
          <xs:element name="startPoint" type="tns:riInput"/>
          <xs:element name="endPoint" type="tns:riInput"/>
          <xs:element name="time" type="xs:dateTime"/>
          <xs:element name="startFrom" type="xs:boolean"/>
          <xs:element name="withTrafficEvents" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="prefNetworks" type="xs:string"/>
          <xs:element name="prefJourney" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="exclusionLines" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="exclusionStops" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="inclusionLines" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="inclusionStops" type="xs:string"/>
          <xs:element name="withMobility" type="xs:boolean"/>
          <xs:element name="withDetails" type="xs:boolean"/>
          <xs:element minOccurs="0" name="applyFileForScoring" type="xs:boolean"/>
          <xs:element minOccurs="0" name="withEcoComparator" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="riInput">
        <xs:sequence/>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="latitude" type="xs:double" use="required"/>
        <xs:attribute name="longitude" type="xs:double" use="required"/>
      </xs:complexType>
      <xs:complexType name="getItineraryResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:itineraryResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="itineraryResultat">
        <xs:sequence>
          <xs:element name="currentTime" type="xs:dateTime"/>
          <xs:element maxOccurs="unbounded" name="itineraries" type="tns:riItinerary"/>
          <xs:element maxOccurs="unbounded" name="notes" type="tns:notice"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="riItinerary">
        <xs:sequence>
          <xs:element name="type" type="tns:itineraryType"/>
          <xs:element name="startTime" type="xs:dateTime"/>
          <xs:element name="endTime" type="xs:dateTime"/>
          <xs:element name="duration" type="xs:int"/>
          <xs:element name="connectionNumber" type="xs:int"/>
          <xs:element name="impactPerburbation" type="tns:impactPerturbationType"/>
          <xs:element name="accessibility" type="xs:string"/>
          <xs:element minOccurs="0" ref="tns:ecoComparator"/>
          <xs:element maxOccurs="unbounded" name="trafficEvents" type="tns:situation"/>
          <xs:element maxOccurs="unbounded" name="itinerarySegments" type="tns:segment"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ecoComparator">
        <xs:sequence>
          <xs:element name="distance" type="xs:double"/>
          <xs:element name="transportEmissions" type="xs:double"/>
          <xs:element name="personalCarEmissions" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="situation">
        <xs:sequence>
          <xs:element name="id" type="xs:string"/>
          <xs:element name="version" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="validityPeriod" type="tns:pairDate"/>
          <xs:element name="publicationPeriod" type="tns:pairDate"/>
          <xs:element name="reason" type="xs:string"/>
          <xs:element name="subReason" type="xs:string"/>
          <xs:element ref="tns:affectScope"/>
          <xs:element maxOccurs="unbounded" name="infoMessages" type="tns:infoMessage"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pairDate">
        <xs:sequence/>
        <xs:attribute name="startDate" type="xs:dateTime" use="required"/>
        <xs:attribute name="endDate" type="xs:dateTime" use="required"/>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="affectScope">
        <xs:sequence>
          <xs:element name="id" type="xs:string"/>
          <xs:element name="groupOfLines" type="tns:pairIdName"/>
          <xs:element maxOccurs="unbounded" name="lines" type="tns:affectedLine"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="affectedLine">
        <xs:sequence>
          <xs:element name="impact" type="tns:perturbationImpact"/>
          <xs:element maxOccurs="unbounded" name="stopPoints" type="tns:pairIdName"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="code" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="infoMessage">
        <xs:sequence>
          <xs:element name="shortContent" type="xs:string"/>
          <xs:element name="longContent" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="infoChannelCode" type="xs:string" use="required"/>
        <xs:attribute name="title" type="xs:string" use="required"/>
        <xs:attribute name="versionContent" type="xs:string" use="required"/>
        <xs:attribute name="creationTime" type="xs:dateTime" use="required"/>
        <xs:attribute name="contentModificationTime" type="xs:dateTime" use="required"/>
      </xs:complexType>
      <xs:complexType name="segment">
        <xs:sequence>
          <xs:element name="startTime" type="xs:dateTime"/>
          <xs:element name="endTime" type="xs:dateTime"/>
          <xs:element name="duration" type="xs:int"/>
          <xs:element ref="tns:transport"/>
          <xs:element name="impactPerburbation" type="tns:impactPerturbationType"/>
          <xs:element maxOccurs="unbounded" name="trafficEventsRefs" type="tns:trafficEventRef"/>
          <xs:element minOccurs="0" name="details" type="tns:segmentDetails"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="trafficEventRef">
        <xs:sequence/>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="impactPerburbation" type="tns:impactPerturbationType" use="required"/>
      </xs:complexType>
      <xs:complexType abstract="true" name="segmentDetails">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="transportSegmentDetails">
        <xs:complexContent>
          <xs:extension base="tns:segmentDetails">
            <xs:sequence>
              <xs:element ref="tns:line"/>
              <xs:element ref="tns:direction"/>
              <xs:element name="destination" type="tns:pairIdName"/>
              <xs:element name="lastCallForServiceLinkWithLine" type="xs:boolean"/>
              <xs:element ref="tns:servicePattern"/>
              <xs:element ref="tns:serviceJourney"/>
              <xs:element maxOccurs="unbounded" name="points" type="tns:riGeoPoint"/>
              <xs:element minOccurs="0" ref="tns:ecoComparator"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="servicePattern">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="servicePatternNotes" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="serviceJourney">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="serviceJourneyNotes" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="flexibleServiceNotes" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="flexibleType" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="riGeoPoint">
        <xs:sequence>
          <xs:element minOccurs="0" ref="tns:city"/>
          <xs:element maxOccurs="unbounded" name="callPointNotes" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="accessibility" type="xs:string" use="required"/>
        <xs:attribute name="latitude" type="xs:double" use="required"/>
        <xs:attribute name="longitude" type="xs:double" use="required"/>
        <xs:attribute name="stopInStation" type="xs:boolean" use="required"/>
        <xs:attribute name="schedule" type="xs:dateTime" use="required"/>
        <xs:attribute name="zone" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="walkSegmentDetails">
        <xs:complexContent>
          <xs:extension base="tns:segmentDetails">
            <xs:sequence>
              <xs:element name="startPoint" type="tns:riGeoPoint"/>
              <xs:element name="endPoint" type="tns:riGeoPoint"/>
              <xs:element minOccurs="0" ref="tns:ecoComparator"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getStopPoints">
        <xs:sequence>
          <xs:element name="date" type="xs:dateTime"/>
          <xs:element name="sortAlpha" type="xs:boolean"/>
          <xs:element minOccurs="0" name="groupOfLinesId" type="xs:string"/>
          <xs:element minOccurs="0" name="lineId" type="xs:string"/>
          <xs:element minOccurs="0" name="directionId" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="stopPlaceId" type="xs:string"/>
          <xs:element minOccurs="0" name="fromCity" type="xs:string"/>
          <xs:element minOccurs="0" name="toCity" type="xs:string"/>
          <xs:element minOccurs="0" name="geoPoint" type="tns:searchGeoPoint"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchGeoPoint">
        <xs:sequence>
          <xs:element name="latitude" type="xs:double"/>
          <xs:element name="longitude" type="xs:double"/>
          <xs:element name="radius" type="xs:double"/>
          <xs:element name="deltaLon" type="xs:double"/>
          <xs:element name="deltaLat" type="xs:double"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStopPointsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:stopPointsResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stopPointsResultat">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="stopPoints" type="tns:stopPoint"/>
          <xs:element maxOccurs="unbounded" name="notes" type="tns:notice"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGroupOfLines">
        <xs:sequence>
          <xs:element name="date" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getGroupOfLinesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:groupOfLinesResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="groupOfLinesResultat">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="groupsOfLines" type="tns:pairIdName"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resolveIds">
        <xs:sequence>
          <xs:element name="date" type="xs:dateTime"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="typeEntityIds" type="tns:objectId"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="typeIds" type="tns:objectId"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="objectId">
        <xs:sequence/>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="entityId" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="resolveIdsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:resolveIdsResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resolveIdsResultat">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="objects" type="tns:objectId"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOperators">
        <xs:sequence>
          <xs:element name="date" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOperatorsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:operatorsResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="operatorsResultat">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="operators" type="tns:pairIdName"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLines">
        <xs:sequence>
          <xs:element name="date" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="operatorId" type="xs:string"/>
          <xs:element minOccurs="0" name="groupOfLinesId" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLinesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:linesResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="linesResultat">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="lines" type="tns:line"/>
          <xs:element maxOccurs="unbounded" name="notes" type="tns:notice"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStops">
        <xs:sequence>
          <xs:element name="date" type="xs:dateTime"/>
          <xs:element name="maxResults" type="xs:int"/>
          <xs:element minOccurs="0" name="stopPlaceId" type="xs:string"/>
          <xs:element minOccurs="0" name="stopPointId" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="lineId" type="xs:string"/>
          <xs:element minOccurs="0" name="directionId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStopsResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:stopsResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="stopsResultat">
        <xs:sequence>
          <xs:element name="currentTime" type="xs:dateTime"/>
          <xs:element maxOccurs="unbounded" name="stopsOnLines" type="tns:stopsOnLine"/>
          <xs:element maxOccurs="unbounded" name="notes" type="tns:notice"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="stopsOnLine">
        <xs:sequence>
          <xs:element ref="tns:line"/>
          <xs:element name="stopPoint" type="tns:pairIdName"/>
          <xs:element name="accessibility" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="stops" type="tns:stop"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="stop">
        <xs:sequence>
          <xs:element ref="tns:direction"/>
          <xs:element name="destination" type="tns:pairIdName"/>
          <xs:element name="servicePattern" type="tns:pairIdName"/>
          <xs:element name="stopInStation" type="xs:boolean"/>
          <xs:element name="startTime" type="xs:dateTime"/>
          <xs:element name="stopTime" type="xs:dateTime"/>
          <xs:element ref="tns:serviceJourney"/>
          <xs:element maxOccurs="unbounded" name="callPointNotes" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStopPlaces">
        <xs:sequence>
          <xs:element name="date" type="xs:dateTime"/>
          <xs:element name="sortAlpha" type="xs:boolean"/>
          <xs:element minOccurs="0" name="groupOfLinesId" type="xs:string"/>
          <xs:element minOccurs="0" name="lineId" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="stopPointId" type="xs:string"/>
          <xs:element minOccurs="0" name="geoPoint" type="tns:searchGeoPoint"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStopPlacesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:stopPlacesResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stopPlacesResultat">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="stopPlaces" type="tns:stopPlace"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="stopPlace">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="lines" type="tns:line"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="latitude" type="xs:double" use="required"/>
        <xs:attribute name="longitude" type="xs:double" use="required"/>
      </xs:complexType>
      <xs:complexType name="getLineTimeTables">
        <xs:sequence>
          <xs:element name="startDate" type="xs:dateTime"/>
          <xs:element name="endDate" type="xs:dateTime"/>
          <xs:element name="maxResults" type="xs:int"/>
          <xs:element maxOccurs="unbounded" name="lineId" type="xs:string"/>
          <xs:element minOccurs="0" name="directionId" type="xs:string"/>
          <xs:element name="offsetStartDate" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLineTimeTablesResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:lineTimeTablesResultat"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="lineTimeTablesResultat">
        <xs:sequence>
          <xs:element name="currentTime" type="xs:dateTime"/>
          <xs:element maxOccurs="unbounded" name="lineTimeTables" type="tns:lineTimeTable"/>
          <xs:element maxOccurs="unbounded" name="notes" type="tns:notice"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="lineTimeTable">
        <xs:sequence>
          <xs:element ref="tns:line"/>
          <xs:element ref="tns:direction"/>
          <xs:element maxOccurs="unbounded" name="lineJourneys" type="tns:lineJourney"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="lineJourney">
        <xs:sequence>
          <xs:element minOccurs="0" ref="tns:servicePattern"/>
          <xs:element name="destination" type="tns:pairIdName"/>
          <xs:element ref="tns:serviceJourney"/>
          <xs:element maxOccurs="unbounded" name="callPoints" type="tns:callPoint"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType final="extension restriction" name="callPoint">
        <xs:sequence>
          <xs:element minOccurs="0" ref="tns:city"/>
          <xs:element maxOccurs="unbounded" name="callPointNotes" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="startTime" type="xs:dateTime" use="required"/>
        <xs:attribute name="stopTime" type="xs:dateTime" use="required"/>
        <xs:attribute name="accessibility" type="xs:string" use="required"/>
        <xs:attribute name="latitude" type="xs:double" use="required"/>
        <xs:attribute name="longitude" type="xs:double" use="required"/>
      </xs:complexType>
      <xs:complexType name="setPerturbations">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="perts" type="tns:situation"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="setPerturbationsResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="itineraryType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="REGULAR"/>
          <xs:enumeration value="ADVISABLE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="impactPerturbationType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="normal"/>
          <xs:enumeration value="information"/>
          <xs:enumeration value="alert"/>
          <xs:enumeration value="critical"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="perturbationImpact">
        <xs:restriction base="xs:string">
          <xs:enumeration value="information"/>
          <xs:enumeration value="access_closed"/>
          <xs:enumeration value="link_closed"/>
          <xs:enumeration value="station_closed"/>
          <xs:enumeration value="trafic_slow"/>
          <xs:enumeration value="trafic_stopped"/>
          <xs:enumeration value="path_closed"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="resolveIdsResponse">
    <wsdl:part name="parameters" element="tns:resolveIdsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupOfLinesResponse">
    <wsdl:part name="parameters" element="tns:getGroupOfLinesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resolveIds">
    <wsdl:part name="parameters" element="tns:resolveIds"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLines">
    <wsdl:part name="parameters" element="tns:getLines"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPerturbationsResponse">
    <wsdl:part name="parameters" element="tns:setPerturbationsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getItineraryResponse">
    <wsdl:part name="parameters" element="tns:getItineraryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStopPoints">
    <wsdl:part name="parameters" element="tns:getStopPoints"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStopPointsResponse">
    <wsdl:part name="parameters" element="tns:getStopPointsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStopPlacesResponse">
    <wsdl:part name="parameters" element="tns:getStopPlacesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStopPlaces">
    <wsdl:part name="parameters" element="tns:getStopPlaces"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getServicePatternsResponse">
    <wsdl:part name="parameters" element="tns:getServicePatternsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupOfLines">
    <wsdl:part name="parameters" element="tns:getGroupOfLines"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatus">
    <wsdl:part name="parameters" element="tns:getStatus"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOperators">
    <wsdl:part name="parameters" element="tns:getOperators"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatusResponse">
    <wsdl:part name="parameters" element="tns:getStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPerturbations">
    <wsdl:part name="parameters" element="tns:setPerturbations"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLineTimeTablesResponse">
    <wsdl:part name="parameters" element="tns:getLineTimeTablesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLineTimeTables">
    <wsdl:part name="parameters" element="tns:getLineTimeTables"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStops">
    <wsdl:part name="parameters" element="tns:getStops"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStopsResponse">
    <wsdl:part name="parameters" element="tns:getStopsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOperatorsResponse">
    <wsdl:part name="parameters" element="tns:getOperatorsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getItinerary">
    <wsdl:part name="parameters" element="tns:getItinerary"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLinesResponse">
    <wsdl:part name="parameters" element="tns:getLinesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getServicePatterns">
    <wsdl:part name="parameters" element="tns:getServicePatterns"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="SmartMove">
    <wsdl:operation name="getStatus">
      <wsdl:input name="getStatus" message="tns:getStatus"></wsdl:input>
      <wsdl:output name="getStatusResponse" message="tns:getStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServicePatterns">
      <wsdl:input name="getServicePatterns" message="tns:getServicePatterns"></wsdl:input>
      <wsdl:output name="getServicePatternsResponse" message="tns:getServicePatternsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getItinerary">
      <wsdl:input name="getItinerary" message="tns:getItinerary"></wsdl:input>
      <wsdl:output name="getItineraryResponse" message="tns:getItineraryResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStopPoints">
      <wsdl:input name="getStopPoints" message="tns:getStopPoints"></wsdl:input>
      <wsdl:output name="getStopPointsResponse" message="tns:getStopPointsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupOfLines">
      <wsdl:input name="getGroupOfLines" message="tns:getGroupOfLines"></wsdl:input>
      <wsdl:output name="getGroupOfLinesResponse" message="tns:getGroupOfLinesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resolveIds">
      <wsdl:input name="resolveIds" message="tns:resolveIds"></wsdl:input>
      <wsdl:output name="resolveIdsResponse" message="tns:resolveIdsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperators">
      <wsdl:input name="getOperators" message="tns:getOperators"></wsdl:input>
      <wsdl:output name="getOperatorsResponse" message="tns:getOperatorsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLines">
      <wsdl:input name="getLines" message="tns:getLines"></wsdl:input>
      <wsdl:output name="getLinesResponse" message="tns:getLinesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStops">
      <wsdl:input name="getStops" message="tns:getStops"></wsdl:input>
      <wsdl:output name="getStopsResponse" message="tns:getStopsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStopPlaces">
      <wsdl:input name="getStopPlaces" message="tns:getStopPlaces"></wsdl:input>
      <wsdl:output name="getStopPlacesResponse" message="tns:getStopPlacesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLineTimeTables">
      <wsdl:input name="getLineTimeTables" message="tns:getLineTimeTables"></wsdl:input>
      <wsdl:output name="getLineTimeTablesResponse" message="tns:getLineTimeTablesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setPerturbations">
      <wsdl:input name="setPerturbations" message="tns:setPerturbations"></wsdl:input>
      <wsdl:output name="setPerturbationsResponse" message="tns:setPerturbationsResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SmartMoveServiceSoapBinding" type="tns:SmartMove">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getStatus">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getStatus">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getServicePatterns">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getServicePatterns">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getServicePatternsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getItinerary">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getItinerary">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getItineraryResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupOfLines">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getGroupOfLines">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGroupOfLinesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStopPoints">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getStopPoints">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStopPointsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resolveIds">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="resolveIds">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="resolveIdsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOperators">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getOperators">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOperatorsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLines">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getLines">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLinesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStops">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getStops">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStopsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLineTimeTables">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getLineTimeTables">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLineTimeTablesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStopPlaces">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getStopPlaces">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStopPlacesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setPerturbations">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="setPerturbations">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setPerturbationsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SmartMoveService">
    <wsdl:port name="SmartMovePort" binding="tns:SmartMoveServiceSoapBinding">
      <soap12:address location="http://localhost:9090/SmartMovePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
				]]></con:content>
				<con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
			</con:part>
		</con:definitionCache>
		<con:endpoints>
			<con:endpoint>http://localhost:9090/SmartMovePort</con:endpoint>
		</con:endpoints>
		<con:operation id="fec97fe6-c3a5-11e6-9a5f-68f7282d8d3d" isOneWay="false" action="" name="getItinerary" bindingOperationName="getItinerary" type="Request-Response" outputName="getItineraryResponse" inputName="getItinerary" receivesAttachments="false" sendsAttachments="false">
			<con:settings/>
		</con:operation>
		
	</con:interface>
 	
	<con:testSuite id="fec97fe7-c3a5-11e6-94d1-68f7282d8d3d" name="Test_Ref_ri_Classique_PROD">
		<con:settings/>
		<con:runType>SEQUENTIAL</con:runType>
        
		<con:testCase id="fec97fe8-c3a5-11e6-b887-68f7282d8d3d" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test_Ref_ri_Classique_PROD" searchProperties="true">
			<con:settings/>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 001 - Château de Vincennes (METRO) -- La défense (METRO)" id="fee2d4e8-c3a5-11e6-be96-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 001 - Château de Vincennes (METRO) -- La défense (METRO)" id="fee2d4e9-c3a5-11e6-9ea6-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Château de Vincennes (METRO)} longitude=${#TestCase#long Château de Vincennes (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat La défense (METRO)} longitude=${#TestCase#long La défense (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="fee2d4ea-c3a5-11e6-afd0-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 1 </line>
    <origine> Château de Vincennes </origine>
    <destination> Esplanade de la Défense       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="fee2fbfa-c3a5-11e6-bddc-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="fee2fbfb-c3a5-11e6-b266-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 002 - Gallieni (METRO) -- Pont de  Levallois Becon  (METRO)" id="ff05c71e-c3a5-11e6-a550-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 002 - Gallieni (METRO) -- Pont de  Levallois Becon  (METRO)" id="ff05c71f-c3a5-11e6-b008-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Gallieni (METRO)} longitude=${#TestCase#long Gallieni (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Pont de  Levallois Becon  (METRO)} longitude=${#TestCase#long Pont de  Levallois Becon  (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ff05c720-c3a5-11e6-a2f4-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 3 </line>
    <origine> Gallieni (Parc de Bagnolet) </origine>
    <destination> Pont de Levallois-Bécon       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ff05c721-c3a5-11e6-affa-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ff05c722-c3a5-11e6-83c4-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 003 - Porte des Lilas (METRO) -- Gambetta  (METRO)" id="ff11873e-c3a5-11e6-8684-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 003 - Porte des Lilas (METRO) -- Gambetta  (METRO)" id="ff11873f-c3a5-11e6-989b-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Porte des Lilas (METRO)} longitude=${#TestCase#long Porte des Lilas (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Gambetta  (METRO)} longitude=${#TestCase#long Gambetta  (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ff118740-c3a5-11e6-838d-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 3B </line>
    <origine> Porte des Lilas </origine>
    <destination> Gambetta</destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ff118741-c3a5-11e6-b666-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ff118742-c3a5-11e6-a681-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 004 - Porte de Clignancourt (METRO) -- Mairie de Montrouge (METRO)" id="ff36ea82-c3a5-11e6-8ec5-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 004 - Porte de Clignancourt (METRO) -- Mairie de Montrouge (METRO)" id="ff36ea83-c3a5-11e6-a2a7-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Porte de Clignancourt (METRO)} longitude=${#TestCase#long Porte de Clignancourt (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Mairie de Montrouge (METRO)} longitude=${#TestCase#long Mairie de Montrouge (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ff36ea84-c3a5-11e6-99cc-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 4 </line>
    <origine> Porte de Clignancourt </origine>
    <destination> Mairie de Montrouge       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ff36ea85-c3a5-11e6-97f2-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ff36ea86-c3a5-11e6-95fb-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 005 - Place d'Italie (METRO) -- Bobigny Pablo Picasso (METRO)" id="ff42d1ae-c3a5-11e6-a4be-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 005 - Place d'Italie (METRO) -- Bobigny Pablo Picasso (METRO)" id="ff42f8c0-c3a5-11e6-b067-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Place d'Italie (METRO)} longitude=${#TestCase#long Place d'Italie (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Bobigny Pablo Picasso (METRO)} longitude=${#TestCase#long Bobigny Pablo Picasso (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ff42f8c1-c3a5-11e6-9ad6-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 5 </line>
    <origine> Place d'Italie </origine>
    <destination> Bobigny-Pablo-Picasso       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ff42f8c2-c3a5-11e6-a679-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ff42f8c3-c3a5-11e6-a3bc-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 006 - Villejuif Louis Aragon (METRO) -- La courneuve (METRO)" id="ff53c20c-c3a5-11e6-aadf-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 006 - Villejuif Louis Aragon (METRO) -- La courneuve (METRO)" id="ff53c20d-c3a5-11e6-9032-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Villejuif Louis Aragon (METRO)} longitude=${#TestCase#long Villejuif Louis Aragon (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat La courneuve (METRO)} longitude=${#TestCase#long La courneuve (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ff53c20e-c3a5-11e6-855a-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 7 </line>
    <origine> Villejuif-Louis Aragon </origine>
    <destination> La Courneuve-8-Mai-1945       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ff53c20f-c3a5-11e6-92c8-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ff53e91e-c3a5-11e6-b26a-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 007 - Mairie d'ivry  (METRO) -- La courneuve (METRO)" id="ff5d111c-c3a5-11e6-aa57-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 007 - Mairie d'ivry  (METRO) -- La courneuve (METRO)" id="ff5d111d-c3a5-11e6-81be-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Mairie d'ivry  (METRO)} longitude=${#TestCase#long Mairie d'ivry  (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat La courneuve (METRO)} longitude=${#TestCase#long La courneuve (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ff5d111e-c3a5-11e6-8560-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 7 </line>
    <origine> Mairie d'Ivry </origine>
    <destination> La Courneuve-8-Mai-1945       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ff5d382c-c3a5-11e6-8c2b-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ff5d382d-c3a5-11e6-9fa7-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 008 - Créteil Pointe du lac (METRO) -- Balard (METRO)" id="ff685c06-c3a5-11e6-a30b-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 008 - Créteil Pointe du lac (METRO) -- Balard (METRO)" id="ff685c07-c3a5-11e6-a992-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Créteil Pointe du lac (METRO)} longitude=${#TestCase#long Créteil Pointe du lac (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Balard (METRO)} longitude=${#TestCase#long Balard (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ff685c08-c3a5-11e6-9349-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 8 </line>
    <origine> Pointe du Lac </origine>
    <destination> Balard       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ff688318-c3a5-11e6-9162-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ff688319-c3a5-11e6-8226-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 009 - Mairie de Montreuil (METRO) -- Pont de Sèvres (METRO)" id="ff940102-c3a5-11e6-90f7-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 009 - Mairie de Montreuil (METRO) -- Pont de Sèvres (METRO)" id="ff940103-c3a5-11e6-a02a-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Mairie de Montreuil (METRO)} longitude=${#TestCase#long Mairie de Montreuil (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Pont de Sèvres (METRO)} longitude=${#TestCase#long Pont de Sèvres (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ff942814-c3a5-11e6-bdc9-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 9 </line>
    <origine> Mairie de Montreuil </origine>
    <destination> Pont de Sèvres       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ff942815-c3a5-11e6-86a3-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ff942816-c3a5-11e6-a4ae-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 010 - Gare d'Austerlitz (METRO) -- Boulogne Pont de Saint-cloud (METRO)" id="ffdbe14a-c3a5-11e6-afec-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 010 - Gare d'Austerlitz (METRO) -- Boulogne Pont de Saint-cloud (METRO)" id="ffdbe14b-c3a5-11e6-a3ea-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Gare d'Austerlitz (METRO)} longitude=${#TestCase#long Gare d'Austerlitz (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Boulogne Pont de Saint-cloud (METRO)} longitude=${#TestCase#long Boulogne Pont de Saint-cloud (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="ffdc085c-c3a5-11e6-b460-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 10 </line>
    <origine> Gare d'Austerlitz </origine>
    <destination> Boulogne Pont de Saint-Cloud       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="ffdc085d-c3a5-11e6-8f57-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="ffdc085e-c3a5-11e6-b217-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 011 - Châtelet (METRO) -- Mairie des Lilas (METRO)" id="fff165a6-c3a5-11e6-aae1-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 011 - Châtelet (METRO) -- Mairie des Lilas (METRO)" id="fff165a7-c3a5-11e6-8303-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Châtelet (METRO)} longitude=${#TestCase#long Châtelet (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Mairie des Lilas (METRO)} longitude=${#TestCase#long Mairie des Lilas (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="fff165a8-c3a5-11e6-bbd3-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 11 </line>
    <origine> Châtelet </origine>
    <destination> Mairie des Lilas       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="fff18cb8-c3a5-11e6-a977-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="fff18cb9-c3a5-11e6-a2c6-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 012 - Mairie d'issy (METRO) -- Front Populaire (METRO)" id="00005a28-c3a6-11e6-8afc-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 012 - Mairie d'issy (METRO) -- Front Populaire (METRO)" id="00005a29-c3a6-11e6-9499-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Mairie d'issy (METRO)} longitude=${#TestCase#long Mairie d'issy (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Front Populaire (METRO)} longitude=${#TestCase#long Front Populaire (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="00008138-c3a6-11e6-8ff5-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 12 </line>
    <origine> Mairie d'Issy </origine>
    <destination> Front Populaire       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0000a84a-c3a6-11e6-9b5d-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0000a84b-c3a6-11e6-9037-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 013 - Chatillon-Montrouge (METRO) -- Saint-Denis Université (METRO)" id="001876a6-c3a6-11e6-956b-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 013 - Chatillon-Montrouge (METRO) -- Saint-Denis Université (METRO)" id="001876a7-c3a6-11e6-a09c-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Chatillon-Montrouge (METRO)} longitude=${#TestCase#long Chatillon-Montrouge (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Saint-Denis Université (METRO)} longitude=${#TestCase#long Saint-Denis Université (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="001876a8-c3a6-11e6-9df2-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 13 </line>
    <origine> Châtillon Montrouge </origine>
    <destination> Saint-Denis-Université       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="001876a9-c3a6-11e6-b86f-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="001876aa-c3a6-11e6-88d5-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 014 - Chatillon-Montrouge (METRO) -- Asnière Genevilliers Les courtilles  (METRO)" id="001edf70-c3a6-11e6-b927-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 014 - Chatillon-Montrouge (METRO) -- Asnière Genevilliers Les courtilles  (METRO)" id="001edf71-c3a6-11e6-a6a3-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Chatillon-Montrouge (METRO)} longitude=${#TestCase#long Chatillon-Montrouge (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Asnière Genevilliers Les courtilles  (METRO)} longitude=${#TestCase#long Asnière Genevilliers Les courtilles  (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="001f0682-c3a6-11e6-bbe9-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 13 </line>
    <origine> Châtillon Montrouge </origine>
    <destination> Asnières-Gennevilliers Les Courtilles       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="001f0683-c3a6-11e6-b02e-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="001f0684-c3a6-11e6-b739-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 015 - Olympiades (METRO) -- Saint-Lazare (METRO)" id="00298e18-c3a6-11e6-8f57-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 015 - Olympiades (METRO) -- Saint-Lazare (METRO)" id="00298e19-c3a6-11e6-ab10-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Olympiades (METRO)} longitude=${#TestCase#long Olympiades (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Saint-Lazare (METRO)} longitude=${#TestCase#long Saint-Lazare (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="00298e1a-c3a6-11e6-967b-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 14 </line>
    <origine> Olympiades</origine>
    <destination>  Saint-Lazare       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="00298e1b-c3a6-11e6-900f-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="00298e1c-c3a6-11e6-8b77-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 016 - Marne la vallée (RER) -- Cergy (RER)" id="0040e740-c3a6-11e6-a996-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 016 - Marne la vallée (RER) -- Cergy (RER)" id="0040e741-c3a6-11e6-90a2-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Marne la vallée (RER)} longitude=${#TestCase#long Marne la vallée (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Cergy (RER)} longitude=${#TestCase#long Cergy (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0040e742-c3a6-11e6-b7e2-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> A </line>
    <origine> Marne-la-Vallée Chessy </origine>
    <destination> Cergy-Le-Haut       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="00410e50-c3a6-11e6-8f73-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="00410e51-c3a6-11e6-a085-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 017 - Marne la vallée (RER) -- Poissy (RER)" id="0046dad8-c3a6-11e6-95d1-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 017 - Marne la vallée (RER) -- Poissy (RER)" id="0046dad9-c3a6-11e6-97f6-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Marne la vallée (RER)} longitude=${#TestCase#long Marne la vallée (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Poissy (RER)} longitude=${#TestCase#long Poissy (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="004701e8-c3a6-11e6-a719-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> A </line>
    <origine> Marne-la-Vallée Chessy </origine>
    <destination> Poissy       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="004701e9-c3a6-11e6-8243-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="004701ea-c3a6-11e6-9165-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 018 - Boissy-St-Léger (RER) -- Saint-Germain en-Laye (RER)" id="0073b85e-c3a6-11e6-b1d1-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 018 - Boissy-St-Léger (RER) -- Saint-Germain en-Laye (RER)" id="0073b85f-c3a6-11e6-befe-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Boissy-St-Léger (RER)} longitude=${#TestCase#long Boissy-St-Léger (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Saint-Germain en-Laye (RER)} longitude=${#TestCase#long Saint-Germain en-Laye (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0073b860-c3a6-11e6-95de-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> A </line>
    <origine> Boissy-Saint-Léger </origine>
    <destination> Saint-Germain-en-Laye       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0073b861-c3a6-11e6-9b37-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0073df6e-c3a6-11e6-a4f8-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 019 - Fontenay aux Roses (RER) -- Aéroport Charles de Gaulle (RER)" id="0090b6fa-c3a6-11e6-8ae8-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 019 - Fontenay aux Roses (RER) -- Aéroport Charles de Gaulle (RER)" id="0090b6fb-c3a6-11e6-b25c-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Fontenay aux Roses (RER)} longitude=${#TestCase#long Fontenay aux Roses (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Aéroport Charles de Gaulle (RER)} longitude=${#TestCase#long Aéroport Charles de Gaulle (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0090b6fc-c3a6-11e6-818c-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content>
&lt;res>
&lt;/res>
                                </content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0090de0c-c3a6-11e6-b686-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0090de0d-c3a6-11e6-a269-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 020 - Fontenay aux Roses (RER) -- Mitry-Claye (RER)" id="0097e31a-c3a6-11e6-97c0-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 020 - Fontenay aux Roses (RER) -- Mitry-Claye (RER)" id="0097e31b-c3a6-11e6-be35-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Fontenay aux Roses (RER)} longitude=${#TestCase#long Fontenay aux Roses (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Mitry-Claye (RER)} longitude=${#TestCase#long Mitry-Claye (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0097e31c-c3a6-11e6-9a32-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content>
&lt;res>
&lt;/res>
                                </content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0097e31d-c3a6-11e6-ac45-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0097e31e-c3a6-11e6-9e4a-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 021 - Saint-Rémy Lès Chevreuse (RER) -- Aéroport Charles de Gaulle (RER)" id="00b3d040-c3a6-11e6-b651-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 021 - Saint-Rémy Lès Chevreuse (RER) -- Aéroport Charles de Gaulle (RER)" id="00b3d041-c3a6-11e6-9a31-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Saint-Rémy Lès Chevreuse (RER)} longitude=${#TestCase#long Saint-Rémy Lès Chevreuse (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Aéroport Charles de Gaulle (RER)} longitude=${#TestCase#long Aéroport Charles de Gaulle (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="00b3d042-c3a6-11e6-a9f5-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> B </line>
    <origine> Saint-Rémy-lès-Chevreuse </origine>
    <destination> Aéroport Charles de Gaulle 1       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="00b3d043-c3a6-11e6-9590-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="00b3d044-c3a6-11e6-947a-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 022 - Choisy-le-Roi (RER) -- Viroflay Rive-gauche (RER)" id="00c758c0-c3a6-11e6-b95d-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 022 - Choisy-le-Roi (RER) -- Viroflay Rive-gauche (RER)" id="00c758c1-c3a6-11e6-8080-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Choisy-le-Roi (RER)} longitude=${#TestCase#long Choisy-le-Roi (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Viroflay Rive-gauche (RER)} longitude=${#TestCase#long Viroflay Rive-gauche (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="00c77fd2-c3a6-11e6-bda0-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> C </line>
    <origine> Choisy-le-Roi </origine>
    <destination> Viroflay-Rive Gauche       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="00c77fd3-c3a6-11e6-81c7-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="00c77fd4-c3a6-11e6-91df-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 023 - Choisy-le-Roi (RER) -- Epinay sur-Seine (RER)" id="00d7d3ec-c3a6-11e6-b8b0-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 023 - Choisy-le-Roi (RER) -- Epinay sur-Seine (RER)" id="00d7d3ed-c3a6-11e6-b65e-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Choisy-le-Roi (RER)} longitude=${#TestCase#long Choisy-le-Roi (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Epinay sur-Seine (RER)} longitude=${#TestCase#long Epinay sur-Seine (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="00d7fafe-c3a6-11e6-a4b7-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> C </line>
    <origine> Choisy-le-Roi </origine>
    <destination> Epinay-sur-Seine       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="00d7faff-c3a6-11e6-92e7-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="00d7fb00-c3a6-11e6-bd88-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 024 - Haussmann Saint-Lazare (RER) -- Chelles Gournay (RER)" id="00ec6de4-c3a6-11e6-a3bb-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 024 - Haussmann Saint-Lazare (RER) -- Chelles Gournay (RER)" id="00ec6de5-c3a6-11e6-aa0d-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Haussmann Saint-Lazare (RER)} longitude=${#TestCase#long Haussmann Saint-Lazare (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Chelles Gournay (RER)} longitude=${#TestCase#long Chelles Gournay (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="00ec6de6-c3a6-11e6-bbae-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> E </line>
    <origine> Haussmann-Saint-Lazare </origine>
    <destination> Chelles Gournay       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="00ec94f6-c3a6-11e6-af43-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="00ec94f7-c3a6-11e6-b8eb-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 025 - Haussmann Saint-Lazare (RER) -- Tournan (RER)" id="00f17714-c3a6-11e6-889f-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 025 - Haussmann Saint-Lazare (RER) -- Tournan (RER)" id="00f17715-c3a6-11e6-86aa-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Haussmann Saint-Lazare (RER)} longitude=${#TestCase#long Haussmann Saint-Lazare (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Tournan (RER)} longitude=${#TestCase#long Tournan (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="00f17716-c3a6-11e6-8c44-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> E </line>
    <origine> Haussmann-Saint-Lazare </origine>
    <destination> Tournan       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="00f17717-c3a6-11e6-9e4a-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="00f17718-c3a6-11e6-9595-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 026 - Creil (RER) -- Malesherbes (RER)" id="00fc25ba-c3a6-11e6-b41b-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 026 - Creil (RER) -- Malesherbes (RER)" id="00fc25bb-c3a6-11e6-9866-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Creil (RER)} longitude=${#TestCase#long Creil (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Malesherbes (RER)} longitude=${#TestCase#long Malesherbes (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="00fc4ccc-c3a6-11e6-a0b4-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content>
&lt;res>
&lt;/res>
                                </content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="00fc4ccd-c3a6-11e6-b12c-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="00fc4cce-c3a6-11e6-9c23-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 027 - Creil (RER) -- Melun (RER)" id="0101f242-c3a6-11e6-9f96-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 027 - Creil (RER) -- Melun (RER)" id="0101f243-c3a6-11e6-8c3c-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Creil (RER)} longitude=${#TestCase#long Creil (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Melun (RER)} longitude=${#TestCase#long Melun (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0101f244-c3a6-11e6-bad1-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content>
&lt;res>
&lt;/res>
                                </content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0101f245-c3a6-11e6-acd2-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0101f246-c3a6-11e6-a765-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 028 - Porte de Vincennes (TRAM) -- Pont de Garigliano (TRAM)" id="01266b22-c3a6-11e6-80a3-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 028 - Porte de Vincennes (TRAM) -- Pont de Garigliano (TRAM)" id="01266b23-c3a6-11e6-83e7-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Porte de Vincennes (TRAM)} longitude=${#TestCase#long Porte de Vincennes (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Pont de Garigliano (TRAM)} longitude=${#TestCase#long Pont de Garigliano (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="01266b24-c3a6-11e6-b88b-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T3A </line>
    <origine> PORTE DE VINCENNES </origine>
    <destination> PONT GARIGLIANO - HOPITAL EUROPEEN GEORGE POMPIDOU       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="01269230-c3a6-11e6-af48-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="01269231-c3a6-11e6-a3ed-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 029 - Porte de Vincennes (TRAM) -- Porte de la Chappelle (TRAM)" id="01445426-c3a6-11e6-adbc-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 029 - Porte de Vincennes (TRAM) -- Porte de la Chappelle (TRAM)" id="01445427-c3a6-11e6-8b11-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Porte de Vincennes (TRAM)} longitude=${#TestCase#long Porte de Vincennes (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Porte de la Chappelle (TRAM)} longitude=${#TestCase#long Porte de la Chappelle (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="01445428-c3a6-11e6-b159-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T3B </line>
    <origine> PORTE DE VINCENNES </origine>
    <destination> PORTE DE LA CHAPELLE       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="01445429-c3a6-11e6-80ba-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="01447b34-c3a6-11e6-a076-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 030 - Chatillon-Montrouge (TRAM) -- Viroflay Rive-droite (TRAM)" id="014f02ca-c3a6-11e6-a74c-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 030 - Chatillon-Montrouge (TRAM) -- Viroflay Rive-droite (TRAM)" id="014f02cb-c3a6-11e6-a8d2-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Chatillon-Montrouge (TRAM)} longitude=${#TestCase#long Chatillon-Montrouge (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Viroflay Rive-droite (TRAM)} longitude=${#TestCase#long Viroflay Rive-droite (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="014f02cc-c3a6-11e6-a202-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T6 </line>
    <origine> CHATILLON - MONTROUGE </origine>
    <destination> VIROFLAY - RIVE DROITE       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="014f29dc-c3a6-11e6-8d43-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="014f29dd-c3a6-11e6-a73e-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 031 - Porte de Versailles (TRAM) -- Pont de Bezons (TRAM)" id="017131a8-c3a6-11e6-a7e6-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 031 - Porte de Versailles (TRAM) -- Pont de Bezons (TRAM)" id="017131a9-c3a6-11e6-ad23-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Porte de Versailles (TRAM)} longitude=${#TestCase#long Porte de Versailles (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Pont de Bezons (TRAM)} longitude=${#TestCase#long Pont de Bezons (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="017158ba-c3a6-11e6-b423-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T2 </line>
    <origine> PORTE DE VERSAILLES </origine>
    <destination> PONT DE BEZONS       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="017158bb-c3a6-11e6-ae63-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="017158bc-c3a6-11e6-92ee-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 032 - Asnière Genevilliers Les courtilles (TRAM) -- Noisy-le-sec (TRAM)" id="01815eb4-c3a6-11e6-90d4-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 032 - Asnière Genevilliers Les courtilles (TRAM) -- Noisy-le-sec (TRAM)" id="01815eb5-c3a6-11e6-b752-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Asnière Genevilliers Les courtilles (TRAM)} longitude=${#TestCase#long Asnière Genevilliers Les courtilles (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Noisy-le-sec (TRAM)} longitude=${#TestCase#long Noisy-le-sec (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="01815eb6-c3a6-11e6-a84c-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T1 </line>
    <origine> LES COURTILLES </origine>
    <destination> NOISY-LE-SEC RER       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="01815eb7-c3a6-11e6-b646-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="01815eb8-c3a6-11e6-badc-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 033 - Marché de St-Denis (TRAM) -- Garges Sarcelles (TRAM)" id="01c32454-c3a6-11e6-b211-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 033 - Marché de St-Denis (TRAM) -- Garges Sarcelles (TRAM)" id="01c32455-c3a6-11e6-a1ab-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Marché de St-Denis (TRAM)} longitude=${#TestCase#long Marché de St-Denis (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Garges Sarcelles (TRAM)} longitude=${#TestCase#long Garges Sarcelles (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="01c34b64-c3a6-11e6-9612-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T5 </line>
    <origine> MARCHE DE SAINT-DENIS </origine>
    <destination> GARGES-SARCELLES RER       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="01c34b65-c3a6-11e6-b024-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="01c34b66-c3a6-11e6-b253-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 034 - Epinay Orgemont (TRAM) -- Villetaneuse Université (TRAM)" id="01cce892-c3a6-11e6-934d-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 034 - Epinay Orgemont (TRAM) -- Villetaneuse Université (TRAM)" id="01cce893-c3a6-11e6-b17b-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Epinay Orgemont (TRAM)} longitude=${#TestCase#long Epinay Orgemont (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Villetaneuse Université (TRAM)} longitude=${#TestCase#long Villetaneuse Université (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="01cce894-c3a6-11e6-a589-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T8 </line>
    <origine> EPINAY - ORGEMONT </origine>
    <destination> DELAUNAY-BELLEVILLE </destination>
  </segment>
  <segment>
    <mode>Tramway </mode>
    <line> T8 </line>
    <origine> DELAUNAY-BELLEVILLE </origine>
    <destination> VILLETANEUSE-UNIVERSITE       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="01cce895-c3a6-11e6-bc8b-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="01cce896-c3a6-11e6-a048-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 035 - Saint-Denis Porte de Paris (TRAM) -- Villetaneuse Université (TRAM)" id="0226075a-c3a6-11e6-9c47-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 035 - Saint-Denis Porte de Paris (TRAM) -- Villetaneuse Université (TRAM)" id="0226075b-c3a6-11e6-9938-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Saint-Denis Porte de Paris (TRAM)} longitude=${#TestCase#long Saint-Denis Porte de Paris (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Villetaneuse Université (TRAM)} longitude=${#TestCase#long Villetaneuse Université (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="02262e6c-c3a6-11e6-b28a-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T8 </line>
    <origine> SAINT-DENIS - PORTE DE PARIS </origine>
    <destination> VILLETANEUSE-UNIVERSITE       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02262e6d-c3a6-11e6-abb7-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02262e6e-c3a6-11e6-b85d-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 036 - Le Bourget (TRAM) -- Bondy (TRAM)" id="0233ea66-c3a6-11e6-b820-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 036 - Le Bourget (TRAM) -- Bondy (TRAM)" id="0233ea67-c3a6-11e6-a064-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Le Bourget (TRAM)} longitude=${#TestCase#long Le Bourget (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Bondy (TRAM)} longitude=${#TestCase#long Bondy (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0233ea68-c3a6-11e6-9d4c-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T1 </line>
    <origine> MAURICE LACHATRE </origine>
    <destination> PETIT NOISY       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02341176-c3a6-11e6-b49c-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02341177-c3a6-11e6-8df4-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 037 - La défense (METRO) -- Château de Vincennes (METRO)" id="02341178-c3a6-11e6-bf06-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 037 - La défense (METRO) -- Château de Vincennes (METRO)" id="02341179-c3a6-11e6-8901-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat La défense (METRO)} longitude=${#TestCase#long La défense (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Château de Vincennes (METRO)} longitude=${#TestCase#long Château de Vincennes (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="02343888-c3a6-11e6-92a4-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 1 </line>
    <origine> Esplanade de la Défense </origine>
    <destination> Château de Vincennes       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02343889-c3a6-11e6-be9e-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0234388a-c3a6-11e6-85c1-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 038 - Pont de  Levallois Becon  (METRO) -- Gallieni (METRO)" id="0234388b-c3a6-11e6-8f6d-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 038 - Pont de  Levallois Becon  (METRO) -- Gallieni (METRO)" id="02345f98-c3a6-11e6-87f5-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Pont de  Levallois Becon  (METRO)} longitude=${#TestCase#long Pont de  Levallois Becon  (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Gallieni (METRO)} longitude=${#TestCase#long Gallieni (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="02345f99-c3a6-11e6-a556-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 3 </line>
    <origine> Pont de Levallois-Bécon </origine>
    <destination> Gallieni (Parc de Bagnolet)       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02345f9a-c3a6-11e6-aaf5-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02345f9b-c3a6-11e6-ade9-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 039 - Gambetta (METRO) -- Porte des Lilas (METRO)" id="0239b6ec-c3a6-11e6-83c4-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 039 - Gambetta (METRO) -- Porte des Lilas (METRO)" id="0239b6ed-c3a6-11e6-991a-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Gambetta (METRO)} longitude=${#TestCase#long Gambetta (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Porte des Lilas (METRO)} longitude=${#TestCase#long Porte des Lilas (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0239ddfe-c3a6-11e6-9c32-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 3B </line>
    <origine> Gambetta </origine>
    <destination> Porte des Lilas</destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0239ddff-c3a6-11e6-b997-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0239de00-c3a6-11e6-bb07-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 040 - Mairie de Montrouge (METRO) -- Porte de Clignancourt (METRO)" id="023a050c-c3a6-11e6-93e5-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 040 - Mairie de Montrouge (METRO) -- Porte de Clignancourt (METRO)" id="023a050d-c3a6-11e6-89ac-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Mairie de Montrouge (METRO)} longitude=${#TestCase#long Mairie de Montrouge (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Porte de Clignancourt (METRO)} longitude=${#TestCase#long Porte de Clignancourt (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023a050e-c3a6-11e6-90aa-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 4 </line>
    <origine> Mairie de Montrouge </origine>
    <destination> Porte de Clignancourt       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023a050f-c3a6-11e6-aeb4-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023a0510-c3a6-11e6-8782-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 041 - Bobigny Pablo Picasso (METRO) -- Place d'Italie (METRO)" id="023a2c1e-c3a6-11e6-838e-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 041 - Bobigny Pablo Picasso (METRO) -- Place d'Italie (METRO)" id="023a2c1f-c3a6-11e6-a79b-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Bobigny Pablo Picasso (METRO)} longitude=${#TestCase#long Bobigny Pablo Picasso (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Place d'Italie (METRO)} longitude=${#TestCase#long Place d'Italie (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023a2c20-c3a6-11e6-9b91-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 5 </line>
    <origine> Bobigny-Pablo-Picasso </origine>
    <destination> Place d'Italie       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023a2c21-c3a6-11e6-b270-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023a2c22-c3a6-11e6-b805-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 042 - La courneuve (METRO) -- Villejuif Louis Aragon (METRO)" id="023a5330-c3a6-11e6-8727-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 042 - La courneuve (METRO) -- Villejuif Louis Aragon (METRO)" id="023a5331-c3a6-11e6-93bc-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat La courneuve (METRO)} longitude=${#TestCase#long La courneuve (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Villejuif Louis Aragon (METRO)} longitude=${#TestCase#long Villejuif Louis Aragon (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023a5332-c3a6-11e6-950d-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 7 </line>
    <origine> La Courneuve-8-Mai-1945 </origine>
    <destination> Villejuif-Louis Aragon       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023a5333-c3a6-11e6-b122-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023a5334-c3a6-11e6-ae0a-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 043 - La courneuve (METRO) -- Mairie d'ivry  (METRO)" id="023a7a40-c3a6-11e6-a5a3-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 043 - La courneuve (METRO) -- Mairie d'ivry  (METRO)" id="023a7a41-c3a6-11e6-83ef-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat La courneuve (METRO)} longitude=${#TestCase#long La courneuve (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Mairie d'ivry  (METRO)} longitude=${#TestCase#long Mairie d'ivry  (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023a7a42-c3a6-11e6-9f5e-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 7 </line>
    <origine> La Courneuve-8-Mai-1945 </origine>
    <destination> Mairie d'Ivry       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023aa152-c3a6-11e6-bada-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023aa153-c3a6-11e6-9acf-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 044 - Balard (METRO) -- Créteil Pointe du lac (METRO)" id="023aa154-c3a6-11e6-9e9f-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 044 - Balard (METRO) -- Créteil Pointe du lac (METRO)" id="023aa155-c3a6-11e6-8199-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Balard (METRO)} longitude=${#TestCase#long Balard (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Créteil Pointe du lac (METRO)} longitude=${#TestCase#long Créteil Pointe du lac (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023ac864-c3a6-11e6-8a83-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 8 </line>
    <origine> Balard </origine>
    <destination> Pointe du Lac       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023aef76-c3a6-11e6-a1dd-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023aef77-c3a6-11e6-aa50-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 045 - Pont de Sèvres (METRO) -- Mairie de Montreuil (METRO)" id="023b1686-c3a6-11e6-a9b2-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 045 - Pont de Sèvres (METRO) -- Mairie de Montreuil (METRO)" id="023b1687-c3a6-11e6-ae74-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Pont de Sèvres (METRO)} longitude=${#TestCase#long Pont de Sèvres (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Mairie de Montreuil (METRO)} longitude=${#TestCase#long Mairie de Montreuil (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023b3d98-c3a6-11e6-9f10-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 9 </line>
    <origine> Pont de Sèvres </origine>
    <destination> Mairie de Montreuil       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023b3d99-c3a6-11e6-9246-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023b3d9a-c3a6-11e6-8c89-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 046 - Boulogne Pont de Saint-cloud (METRO) -- Gare d'Austerlitz (METRO)" id="023b8bb6-c3a6-11e6-b03d-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 046 - Boulogne Pont de Saint-cloud (METRO) -- Gare d'Austerlitz (METRO)" id="023b8bb7-c3a6-11e6-b8c3-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Boulogne Pont de Saint-cloud (METRO)} longitude=${#TestCase#long Boulogne Pont de Saint-cloud (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Gare d'Austerlitz (METRO)} longitude=${#TestCase#long Gare d'Austerlitz (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023b8bb8-c3a6-11e6-9fe8-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 10 </line>
    <origine> Boulogne Pont de Saint-Cloud </origine>
    <destination> Gare d'Austerlitz       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023b8bb9-c3a6-11e6-a87c-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023b8bba-c3a6-11e6-bd09-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 047 - Mairie des Lilas (METRO) -- Châtelet (METRO)" id="023bd9da-c3a6-11e6-a963-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 047 - Mairie des Lilas (METRO) -- Châtelet (METRO)" id="023bd9db-c3a6-11e6-9f59-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Mairie des Lilas (METRO)} longitude=${#TestCase#long Mairie des Lilas (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Châtelet (METRO)} longitude=${#TestCase#long Châtelet (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023c00ec-c3a6-11e6-b9c7-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 11 </line>
    <origine> Mairie des Lilas </origine>
    <destination> Châtelet       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023c00ed-c3a6-11e6-ac1e-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023c27fa-c3a6-11e6-bd2b-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 048 - Front Populaire (METRO) -- Mairie d'issy (METRO)" id="023c761e-c3a6-11e6-a753-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 048 - Front Populaire (METRO) -- Mairie d'issy (METRO)" id="023c761f-c3a6-11e6-b985-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Front Populaire (METRO)} longitude=${#TestCase#long Front Populaire (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Mairie d'issy (METRO)} longitude=${#TestCase#long Mairie d'issy (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023c7620-c3a6-11e6-922e-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 12 </line>
    <origine> Front Populaire </origine>
    <destination> Mairie d'Issy       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023c7621-c3a6-11e6-b35f-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023c9d30-c3a6-11e6-9da1-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 049 - Saint-Denis Université (METRO) -- Chatillon-Montrouge (METRO)" id="023ceb52-c3a6-11e6-a6ce-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 049 - Saint-Denis Université (METRO) -- Chatillon-Montrouge (METRO)" id="023ceb53-c3a6-11e6-b332-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Saint-Denis Université (METRO)} longitude=${#TestCase#long Saint-Denis Université (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Chatillon-Montrouge (METRO)} longitude=${#TestCase#long Chatillon-Montrouge (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023ceb54-c3a6-11e6-a58b-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 13 </line>
    <origine> Saint-Denis-Université </origine>
    <destination> Châtillon Montrouge       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023ceb55-c3a6-11e6-a3e5-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023ceb56-c3a6-11e6-8151-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 050 - Asnière Genevilliers Les courtilles  (METRO) -- Chatillon-Montrouge (METRO)" id="023d3974-c3a6-11e6-a166-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 050 - Asnière Genevilliers Les courtilles  (METRO) -- Chatillon-Montrouge (METRO)" id="023d3975-c3a6-11e6-855b-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Asnière Genevilliers Les courtilles  (METRO)} longitude=${#TestCase#long Asnière Genevilliers Les courtilles  (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Chatillon-Montrouge (METRO)} longitude=${#TestCase#long Chatillon-Montrouge (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023d6082-c3a6-11e6-a78c-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 13 </line>
    <origine> Asnières-Gennevilliers Les Courtilles </origine>
    <destination> Châtillon Montrouge       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023d6083-c3a6-11e6-853b-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023d6084-c3a6-11e6-8814-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 051 - Saint-Lazare (METRO) -- Olympiades (METRO)" id="023daea6-c3a6-11e6-95e7-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 051 - Saint-Lazare (METRO) -- Olympiades (METRO)" id="023daea7-c3a6-11e6-9cf0-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Saint-Lazare (METRO)} longitude=${#TestCase#long Saint-Lazare (METRO)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Olympiades (METRO)} longitude=${#TestCase#long Olympiades (METRO)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>metro</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023daea8-c3a6-11e6-adab-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Metro </mode>
    <line> 14 </line>
    <origine> Saint-Lazare </origine>
    <destination> Olympiades       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023dd5b6-c3a6-11e6-823a-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023dd5b7-c3a6-11e6-b683-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 052 - Cergy (RER) -- Marne la vallée (RER)" id="023e23da-c3a6-11e6-a590-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 052 - Cergy (RER) -- Marne la vallée (RER)" id="023e23db-c3a6-11e6-b902-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Cergy (RER)} longitude=${#TestCase#long Cergy (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Marne la vallée (RER)} longitude=${#TestCase#long Marne la vallée (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023e4aec-c3a6-11e6-8259-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> A </line>
    <origine> Cergy-Le-Haut </origine>
    <destination> Marne-la-Vallée Chessy       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023e4aed-c3a6-11e6-b15e-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023e4aee-c3a6-11e6-9327-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 053 - Poissy (RER) -- Marne la vallée (RER)" id="023e71fa-c3a6-11e6-b873-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 053 - Poissy (RER) -- Marne la vallée (RER)" id="023e71fb-c3a6-11e6-9753-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Poissy (RER)} longitude=${#TestCase#long Poissy (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Marne la vallée (RER)} longitude=${#TestCase#long Marne la vallée (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023e990c-c3a6-11e6-8015-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> A </line>
    <origine> Poissy </origine>
    <destination> Marne-la-Vallée Chessy       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023e990d-c3a6-11e6-97c4-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023e990e-c3a6-11e6-ab9e-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 054 - Saint-Germain en-Laye (RER) -- Boissy-St-Léger (RER)" id="023ee72e-c3a6-11e6-af80-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 054 - Saint-Germain en-Laye (RER) -- Boissy-St-Léger (RER)" id="023f0e3e-c3a6-11e6-8996-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Saint-Germain en-Laye (RER)} longitude=${#TestCase#long Saint-Germain en-Laye (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Boissy-St-Léger (RER)} longitude=${#TestCase#long Boissy-St-Léger (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023f0e3f-c3a6-11e6-96d8-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> A </line>
    <origine> Saint-Germain-en-Laye </origine>
    <destination> Boissy-Saint-Léger       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023f0e40-c3a6-11e6-b72b-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023f0e41-c3a6-11e6-8d4b-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 055 - Aéroport Charles de Gaulle (RER) -- Fontenay aux Roses (RER)" id="023f5c62-c3a6-11e6-8b0f-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 055 - Aéroport Charles de Gaulle (RER) -- Fontenay aux Roses (RER)" id="023f5c63-c3a6-11e6-a75f-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Aéroport Charles de Gaulle (RER)} longitude=${#TestCase#long Aéroport Charles de Gaulle (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Fontenay aux Roses (RER)} longitude=${#TestCase#long Fontenay aux Roses (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023faa82-c3a6-11e6-a67f-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content>
&lt;res>
&lt;/res>
                                </content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023faa83-c3a6-11e6-bee5-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023faa84-c3a6-11e6-8d72-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 056 - Mitry-Claye (RER) -- Fontenay aux Roses (RER)" id="023fd194-c3a6-11e6-867f-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 056 - Mitry-Claye (RER) -- Fontenay aux Roses (RER)" id="023fd195-c3a6-11e6-b81e-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Mitry-Claye (RER)} longitude=${#TestCase#long Mitry-Claye (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Fontenay aux Roses (RER)} longitude=${#TestCase#long Fontenay aux Roses (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="023fd196-c3a6-11e6-a5f3-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content>
&lt;res>
&lt;/res>
                                </content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="023fd197-c3a6-11e6-bcc3-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="023fd198-c3a6-11e6-8fd9-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 057 - Aéroport Charles de Gaulle (RER) -- Saint-Rémy Lès Chevreuse (RER)" id="02401fb6-c3a6-11e6-bdb4-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 057 - Aéroport Charles de Gaulle (RER) -- Saint-Rémy Lès Chevreuse (RER)" id="024046c8-c3a6-11e6-a401-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Aéroport Charles de Gaulle (RER)} longitude=${#TestCase#long Aéroport Charles de Gaulle (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Saint-Rémy Lès Chevreuse (RER)} longitude=${#TestCase#long Saint-Rémy Lès Chevreuse (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="024046c9-c3a6-11e6-8392-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> B </line>
    <origine> Aéroport Charles de Gaulle 1 </origine>
    <destination> Saint-Rémy-lès-Chevreuse       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="024046ca-c3a6-11e6-bcf2-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="024046cb-c3a6-11e6-b5dd-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 058 - Viroflay Rive-gauche (RER) -- Choisy-le-Roi (RER)" id="0240bbfa-c3a6-11e6-a095-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 058 - Viroflay Rive-gauche (RER) -- Choisy-le-Roi (RER)" id="0240bbfb-c3a6-11e6-985b-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Viroflay Rive-gauche (RER)} longitude=${#TestCase#long Viroflay Rive-gauche (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Choisy-le-Roi (RER)} longitude=${#TestCase#long Choisy-le-Roi (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0240bbfc-c3a6-11e6-8f07-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> C </line>
    <origine> Viroflay-Rive Gauche </origine>
    <destination> Choisy-le-Roi       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0240bbfd-c3a6-11e6-9ef8-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0240e30a-c3a6-11e6-afb0-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 059 - Epinay sur-Seine (RER) -- Choisy-le-Roi (RER)" id="02410a1c-c3a6-11e6-bce2-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 059 - Epinay sur-Seine (RER) -- Choisy-le-Roi (RER)" id="02410a1d-c3a6-11e6-8134-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Epinay sur-Seine (RER)} longitude=${#TestCase#long Epinay sur-Seine (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Choisy-le-Roi (RER)} longitude=${#TestCase#long Choisy-le-Roi (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0241312c-c3a6-11e6-b492-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> C </line>
    <origine> Epinay-sur-Seine </origine>
    <destination> Choisy-le-Roi       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0241312d-c3a6-11e6-8fe6-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0241312e-c3a6-11e6-98ae-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 060 - Chelles Gournay (RER) -- Haussmann Saint-Lazare (RER)" id="02417f50-c3a6-11e6-9dd3-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 060 - Chelles Gournay (RER) -- Haussmann Saint-Lazare (RER)" id="02417f51-c3a6-11e6-8648-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Chelles Gournay (RER)} longitude=${#TestCase#long Chelles Gournay (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Haussmann Saint-Lazare (RER)} longitude=${#TestCase#long Haussmann Saint-Lazare (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0241a65e-c3a6-11e6-98cd-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> E </line>
    <origine> Chelles Gournay </origine>
    <destination> Haussmann-Saint-Lazare       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0241a65f-c3a6-11e6-9f93-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0241a660-c3a6-11e6-932d-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 061 - Tournan (RER) -- Haussmann Saint-Lazare (RER)" id="0241cd70-c3a6-11e6-880f-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 061 - Tournan (RER) -- Haussmann Saint-Lazare (RER)" id="0241f482-c3a6-11e6-aec7-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Tournan (RER)} longitude=${#TestCase#long Tournan (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Haussmann Saint-Lazare (RER)} longitude=${#TestCase#long Haussmann Saint-Lazare (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0241f483-c3a6-11e6-8546-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>RER </mode>
    <line> E </line>
    <origine> Tournan </origine>
    <destination> Haussmann-Saint-Lazare       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02421b94-c3a6-11e6-94a5-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02421b95-c3a6-11e6-8554-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 062 - Malesherbes (RER) -- Creil (RER)" id="024242a4-c3a6-11e6-b604-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 062 - Malesherbes (RER) -- Creil (RER)" id="024242a5-c3a6-11e6-ad4b-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Malesherbes (RER)} longitude=${#TestCase#long Malesherbes (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Creil (RER)} longitude=${#TestCase#long Creil (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="024242a6-c3a6-11e6-9dce-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content>
&lt;res>
&lt;/res>
                                </content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="024269b6-c3a6-11e6-b4a5-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="024269b7-c3a6-11e6-9b93-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 063 - Melun (RER) -- Creil (RER)" id="0242b7d8-c3a6-11e6-b658-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 063 - Melun (RER) -- Creil (RER)" id="0242b7d9-c3a6-11e6-842b-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Melun (RER)} longitude=${#TestCase#long Melun (RER)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Creil (RER)} longitude=${#TestCase#long Creil (RER)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>rail</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0242b7da-c3a6-11e6-add5-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content>
&lt;res>
&lt;/res>
                                </content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0242b7db-c3a6-11e6-a4f8-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0242b7dc-c3a6-11e6-a876-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 064 - Pont de Garigliano (TRAM) -- Porte de Vincennes (TRAM)" id="024305f8-c3a6-11e6-843b-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 064 - Pont de Garigliano (TRAM) -- Porte de Vincennes (TRAM)" id="02432d0a-c3a6-11e6-97ff-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Pont de Garigliano (TRAM)} longitude=${#TestCase#long Pont de Garigliano (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Porte de Vincennes (TRAM)} longitude=${#TestCase#long Porte de Vincennes (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="02432d0b-c3a6-11e6-b15c-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T3A </line>
    <origine> PONT GARIGLIANO - HOPITAL EUROPEEN GEORGE POMPIDOU </origine>
    <destination> PORTE DE VINCENNES       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02432d0c-c3a6-11e6-87a8-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02432d0d-c3a6-11e6-9876-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 065 - Porte de la Chappelle (TRAM) -- Porte de Vincennes (TRAM)" id="02437b2c-c3a6-11e6-8974-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 065 - Porte de la Chappelle (TRAM) -- Porte de Vincennes (TRAM)" id="02437b2d-c3a6-11e6-a6e6-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Porte de la Chappelle (TRAM)} longitude=${#TestCase#long Porte de la Chappelle (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Porte de Vincennes (TRAM)} longitude=${#TestCase#long Porte de Vincennes (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0243a23e-c3a6-11e6-b1e3-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T3B </line>
    <origine> PORTE DE LA CHAPELLE </origine>
    <destination> PORTE DE VINCENNES       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0243a23f-c3a6-11e6-b41c-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0243a240-c3a6-11e6-890e-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 066 - Viroflay Rive-droite (TRAM) -- Chatillon-Montrouge (TRAM)" id="02441770-c3a6-11e6-a732-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 066 - Viroflay Rive-droite (TRAM) -- Chatillon-Montrouge (TRAM)" id="02441771-c3a6-11e6-a181-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Viroflay Rive-droite (TRAM)} longitude=${#TestCase#long Viroflay Rive-droite (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Chatillon-Montrouge (TRAM)} longitude=${#TestCase#long Chatillon-Montrouge (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="02441772-c3a6-11e6-b9c2-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T6 </line>
    <origine> VIROFLAY - RIVE DROITE </origine>
    <destination> CHATILLON - MONTROUGE       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02441773-c3a6-11e6-90ca-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02441774-c3a6-11e6-862b-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 067 - Pont de Bezons (TRAM) -- Porte de Versailles (TRAM)" id="02446592-c3a6-11e6-a1c2-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 067 - Pont de Bezons (TRAM) -- Porte de Versailles (TRAM)" id="02446593-c3a6-11e6-b25a-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Pont de Bezons (TRAM)} longitude=${#TestCase#long Pont de Bezons (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Porte de Versailles (TRAM)} longitude=${#TestCase#long Porte de Versailles (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="02448ca4-c3a6-11e6-b63f-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T2 </line>
    <origine> PONT DE BEZONS </origine>
    <destination> PORTE DE VERSAILLES       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02448ca5-c3a6-11e6-b3d6-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02448ca6-c3a6-11e6-a84c-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 068 - Noisy-le-sec (TRAM) -- Asnière Genevilliers Les courtilles (TRAM)" id="0244dac6-c3a6-11e6-bfc1-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 068 - Noisy-le-sec (TRAM) -- Asnière Genevilliers Les courtilles (TRAM)" id="0244dac7-c3a6-11e6-a965-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Noisy-le-sec (TRAM)} longitude=${#TestCase#long Noisy-le-sec (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Asnière Genevilliers Les courtilles (TRAM)} longitude=${#TestCase#long Asnière Genevilliers Les courtilles (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0244dac8-c3a6-11e6-877f-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T1 </line>
    <origine> NOISY-LE-SEC RER </origine>
    <destination> LES COURTILLES       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="024501d4-c3a6-11e6-ad63-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="024501d5-c3a6-11e6-8b58-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 069 - Garges Sarcelles (TRAM) -- Marché de St-Denis (TRAM)" id="024528e6-c3a6-11e6-b756-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 069 - Garges Sarcelles (TRAM) -- Marché de St-Denis (TRAM)" id="024528e7-c3a6-11e6-b1d2-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Garges Sarcelles (TRAM)} longitude=${#TestCase#long Garges Sarcelles (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Marché de St-Denis (TRAM)} longitude=${#TestCase#long Marché de St-Denis (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="02454ff8-c3a6-11e6-b78f-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T5 </line>
    <origine> GARGES-SARCELLES RER </origine>
    <destination> MARCHE DE SAINT-DENIS       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="02454ff9-c3a6-11e6-a454-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02454ffa-c3a6-11e6-bbce-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 070 - Villetaneuse Université (TRAM) -- Epinay Orgemont (TRAM)" id="02459e1a-c3a6-11e6-bc15-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 070 - Villetaneuse Université (TRAM) -- Epinay Orgemont (TRAM)" id="02459e1b-c3a6-11e6-ab7d-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Villetaneuse Université (TRAM)} longitude=${#TestCase#long Villetaneuse Université (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Epinay Orgemont (TRAM)} longitude=${#TestCase#long Epinay Orgemont (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="02459e1c-c3a6-11e6-b1fd-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T8 </line>
    <origine> VILLETANEUSE-UNIVERSITE </origine>
    <destination> DELAUNAY-BELLEVILLE</destination>
  </segment>
  <segment>
    <mode>Tramway </mode>
    <line> T8 </line>
    <origine> DELAUNAY-BELLEVILLE </origine>
    <destination> EPINAY - ORGEMONT</destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0245c52c-c3a6-11e6-9aa8-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0245c52d-c3a6-11e6-9bbb-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 071 - Villetaneuse Université (TRAM) -- Saint-Denis Porte de Paris (TRAM)" id="0246134c-c3a6-11e6-bccc-68f7282d8d3d">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 071 - Villetaneuse Université (TRAM) -- Saint-Denis Porte de Paris (TRAM)" id="0246134d-c3a6-11e6-a7b3-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Villetaneuse Université (TRAM)} longitude=${#TestCase#long Villetaneuse Université (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Saint-Denis Porte de Paris (TRAM)} longitude=${#TestCase#long Saint-Denis Porte de Paris (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0246134e-c3a6-11e6-aaf0-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T8 </line>
    <origine> VILLETANEUSE-UNIVERSITE </origine>
    <destination> SAINT-DENIS - PORTE DE PARIS       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0246134f-c3a6-11e6-a98a-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="02461350-c3a6-11e6-8c61-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep type="request" name="RI_REF_CLASSIQUE_ 072 - Bondy (TRAM) -- Le Bourget (TRAM)" id="02468880-c3a6-11e6-ae1c-68f7282d8d3d" disabled="true">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>SmartMoveServiceSoapBinding</con:interface>
					<con:operation>getItinerary</con:operation>
					<con:request name="RI_REF_CLASSIQUE_ 072 - Bondy (TRAM) -- Le Bourget (TRAM)" id="02468881-c3a6-11e6-8226-68f7282d8d3d">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>http://r-rvb02.ixxi.net/SmartMovePort</con:endpoint>

						<con:request><![CDATA[
<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:smar="http://smartmove.ixxi/">\r
  <soap:Header/>\r
  <soap:Body>\r
    <smar:getItinerary>\r
         <startPoint type="address" latitude=${#TestCase#lat Bondy (TRAM)} longitude=${#TestCase#long Bondy (TRAM)}/>\r
         <endPoint type="address" latitude=${#TestCase#lat Le Bourget (TRAM)} longitude=${#TestCase#long Le Bourget (TRAM)}/>\r
         <time>2016-12-21T09:00:00+01:00</time>\r
         <startFrom>true</startFrom>\r
         <withTrafficEvents>false</withTrafficEvents>\r
         <prefJourney>rvbFaster</prefJourney>\r
         <prefNetworks>tram</prefNetworks>\r
         <withMobility>false</withMobility>\r
         <withDetails>true</withDetails>\r
   </smar:getItinerary>\r
  </soap:Body>\r
</soap:Envelope>
						]]></con:request>
						<con:assertion type="XQuery Match" id="0246af90-c3a6-11e6-9ff7-68f7282d8d3d" name="XQuery vérification de l'itinéraire ">
                            <con:configuration>
                                <path><![CDATA[
                                    declare namespace ns1='http://smartmove.ixxi/';
declare namespace SOAP-ENV='http://www.w3.org/2003/05/soap-envelope';
declare namespace SOAP-ENC='http://www.w3.org/2003/05/soap-encoding';



<res>
{
for $seg in //ns1:getItineraryResponse/return/itineraries/itinerarySegments
where $seg/ns1:transport/@mode != "walk"
return
<segment>
<mode>{data($seg/details/ns1:line/groupOfLines/@name)}</mode>
<line> {data($seg/details/ns1:line/@name)} </line>
<origine> {data($seg/details/points[position() = 1]/@name)} </origine>
<destination> {data($seg/details/points[last()]/@name)} </destination>
</segment>
}
</res>
                                ]]></path>
                                <content><![CDATA[
<res>
  <segment>
    <mode>Tramway </mode>
    <line> T1 </line>
    <origine> PETIT NOISY </origine>
    <destination> MAURICE LACHATRE       </destination>
  </segment>
</res>
                                ]]></content>
                                <allowWildcards>false</allowWildcards>
                            </con:configuration>
                        </con:assertion>

						<con:assertion type="SOAP Response" id="0246af91-c3a6-11e6-a23d-68f7282d8d3d"/>
						<con:assertion type="SOAP Fault Assertion" id="0246af92-c3a6-11e6-a516-68f7282d8d3d"/>
						<con:credentials>
							<con:authType>No Authorization</con:authType>
						</con:credentials>
						<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
						<con:jmsPropertyConfig/>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
    <con:properties>
      <con:property>
         <con:name>long Poissy (RER)</con:name>
         <con:value>"2.041013"</con:value>
      </con:property>
      <con:property>
         <con:name>long Boulogne Pont de Saint-cloud (METRO)</con:name>
         <con:value>"2.228345"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Melun (RER)</con:name>
         <con:value>"48.527728"</con:value>
      </con:property>
      <con:property>
         <con:name>long Gambetta (METRO)</con:name>
         <con:value>"2.397155"</con:value>
      </con:property>
      <con:property>
         <con:name>long Front Populaire (METRO)</con:name>
         <con:value>"2.366000"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Gallieni (METRO)</con:name>
         <con:value>"48.864928"</con:value>
      </con:property>
      <con:property>
         <con:name>long Bondy (TRAM)</con:name>
         <con:value>"2.479001"</con:value>
      </con:property>
      <con:property>
         <con:name>lat La défense (METRO)</con:name>
         <con:value>"48.887860"</con:value>
      </con:property>
      <con:property>
         <con:name>long Mitry-Claye (RER)</con:name>
         <con:value>"2.642734"</con:value>
      </con:property>
      <con:property>
         <con:name>long Saint-Lazare (METRO)</con:name>
         <con:value>"2.326241"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Château de Vincennes (METRO)</con:name>
         <con:value>"48.844499"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Asnière Genevilliers Les courtilles (TRAM)</con:name>
         <con:value>"48.930179"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Aéroport Charles de Gaulle (RER)</con:name>
         <con:value>"49.010333"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Pont de  Levallois Becon  (METRO)</con:name>
         <con:value>"48.897377"</con:value>
      </con:property>
      <con:property>
         <con:name>long Le Bourget (TRAM)</con:name>
         <con:value>"2.425731"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Bondy (TRAM)</con:name>
         <con:value>"48.894513"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Porte de Vincennes (TRAM)</con:name>
         <con:value>"48.847180"</con:value>
      </con:property>
      <con:property>
         <con:name>long Villejuif Louis Aragon (METRO)</con:name>
         <con:value>"2.367684"</con:value>
      </con:property>
      <con:property>
         <con:name>long Bobigny Pablo Picasso (METRO)</con:name>
         <con:value>"2.449552"</con:value>
      </con:property>
      <con:property>
         <con:name>long Porte de Versailles (TRAM)</con:name>
         <con:value>"2.287346"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Garges Sarcelles (TRAM)</con:name>
         <con:value>"48.976981"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Balard (METRO)</con:name>
         <con:value>"48.836025"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Epinay Orgemont (TRAM)</con:name>
         <con:value>"48.955358"</con:value>
      </con:property>
      <con:property>
         <con:name>long Haussmann Saint-Lazare (RER)</con:name>
         <con:value>"2.328585"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Asnière Genevilliers Les courtilles  (METRO)</con:name>
         <con:value>"48.930179"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Mairie d'issy (METRO)</con:name>
         <con:value>"48.824441"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Le Bourget (TRAM)</con:name>
         <con:value>"48.931162"</con:value>
      </con:property>
      <con:property>
         <con:name>long Villetaneuse Université (TRAM)</con:name>
         <con:value>"2.341690"</con:value>
      </con:property>
      <con:property>
         <con:name>long Chelles Gournay (RER)</con:name>
         <con:value>"2.582371"</con:value>
      </con:property>
      <con:property>
         <con:name>long La défense (METRO)</con:name>
         <con:value>"2.250593"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Villejuif Louis Aragon (METRO)</con:name>
         <con:value>"48.787748"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Villetaneuse Université (TRAM)</con:name>
         <con:value>"48.959411"</con:value>
      </con:property>
      <con:property>
         <con:name>long Créteil Pointe du lac (METRO)</con:name>
         <con:value>"2.463829"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Tournan (RER)</con:name>
         <con:value>"48.739597"</con:value>
      </con:property>
      <con:property>
         <con:name>long Noisy-le-sec (TRAM)</con:name>
         <con:value>"2.459488"</con:value>
      </con:property>
      <con:property>
         <con:name>long Chatillon-Montrouge (TRAM)</con:name>
         <con:value>"2.300396"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Saint-Denis Université (METRO)</con:name>
         <con:value>"48.946155"</con:value>
      </con:property>
      <con:property>
         <con:name>long Place d'Italie (METRO)</con:name>
         <con:value>"2.355571"</con:value>
      </con:property>
      <con:property>
         <con:name>long Marché de St-Denis (TRAM)</con:name>
         <con:value>"2.355867"</con:value>
      </con:property>
      <con:property>
         <con:name>long Malesherbes (RER)</con:name>
         <con:value>"2.401721"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Front Populaire (METRO)</con:name>
         <con:value>"48.906591"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Mairie de Montreuil (METRO)</con:name>
         <con:value>"48.862476"</con:value>
      </con:property>
      <con:property>
         <con:name>long Asnière Genevilliers Les courtilles  (METRO)</con:name>
         <con:value>"2.283998"</con:value>
      </con:property>
      <con:property>
         <con:name>long Fontenay aux Roses (RER)</con:name>
         <con:value>"2.292761"</con:value>
      </con:property>
      <con:property>
         <con:name>long Aéroport Charles de Gaulle (RER)</con:name>
         <con:value>"2.561231"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Haussmann Saint-Lazare (RER)</con:name>
         <con:value>"48.874992"</con:value>
      </con:property>
      <con:property>
         <con:name>long Porte de Vincennes (TRAM)</con:name>
         <con:value>"2.409564"</con:value>
      </con:property>
      <con:property>
         <con:name>long Epinay sur-Seine (RER)</con:name>
         <con:value>"2.302614"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Boulogne Pont de Saint-cloud (METRO)</con:name>
         <con:value>"48.840923"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Mitry-Claye (RER)</con:name>
         <con:value>"48.975638"</con:value>
      </con:property>
      <con:property>
         <con:name>long Pont de Garigliano (TRAM)</con:name>
         <con:value>"2.271204"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Cergy (RER)</con:name>
         <con:value>"49.049031"</con:value>
      </con:property>
      <con:property>
         <con:name>long Porte des Lilas (METRO)</con:name>
         <con:value>"2.406459"</con:value>
      </con:property>
      <con:property>
         <con:name>long Pont de Bezons (TRAM)</con:name>
         <con:value>"2.217324"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Gare d'Austerlitz (METRO)</con:name>
         <con:value>"48.842625"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Choisy-le-Roi (RER)</con:name>
         <con:value>"48.765832"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Pont de Sèvres (METRO)</con:name>
         <con:value>"48.829737"</con:value>
      </con:property>
      <con:property>
         <con:name>long Balard (METRO)</con:name>
         <con:value>"2.278157"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Marché de St-Denis (TRAM)</con:name>
         <con:value>"48.938672"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Fontenay aux Roses (RER)</con:name>
         <con:value>"48.787866"</con:value>
      </con:property>
      <con:property>
         <con:name>long Mairie d'ivry  (METRO)</con:name>
         <con:value>"2.384226"</con:value>
      </con:property>
      <con:property>
         <con:name>long Garges Sarcelles (TRAM)</con:name>
         <con:value>"2.391365"</con:value>
      </con:property>
      <con:property>
         <con:name>long Epinay Orgemont (TRAM)</con:name>
         <con:value>"2.295423"</con:value>
      </con:property>
      <con:property>
         <con:name>long Saint-Rémy Lès Chevreuse (RER)</con:name>
         <con:value>"2.070855"</con:value>
      </con:property>
      <con:property>
         <con:name>long Tournan (RER)</con:name>
         <con:value>"2.759485"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Chatillon-Montrouge (METRO)</con:name>
         <con:value>"48.810626"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Marne la vallée (RER)</con:name>
         <con:value>"48.869686"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Noisy-le-sec (TRAM)</con:name>
         <con:value>"48.895360"</con:value>
      </con:property>
      <con:property>
         <con:name>long Viroflay Rive-droite (TRAM)</con:name>
         <con:value>"2.168765"</con:value>
      </con:property>
      <con:property>
         <con:name>long Asnière Genevilliers Les courtilles (TRAM)</con:name>
         <con:value>"2.283998"</con:value>
      </con:property>
      <con:property>
         <con:name>long Pont de Sèvres (METRO)</con:name>
         <con:value>"2.230276"</con:value>
      </con:property>
      <con:property>
         <con:name>long Porte de Clignancourt (METRO)</con:name>
         <con:value>"2.344678"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Saint-Rémy Lès Chevreuse (RER)</con:name>
         <con:value>"48.703033"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Saint-Denis Porte de Paris (TRAM)</con:name>
         <con:value>"48.929628"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Pont de Garigliano (TRAM)</con:name>
         <con:value>"48.837942"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Chatillon-Montrouge (TRAM)</con:name>
         <con:value>"48.810562"</con:value>
      </con:property>
      <con:property>
         <con:name>long Mairie de Montrouge (METRO)</con:name>
         <con:value>"2.319396"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Bobigny Pablo Picasso (METRO)</con:name>
         <con:value>"48.906908"</con:value>
      </con:property>
      <con:property>
         <con:name>long Pont de  Levallois Becon  (METRO)</con:name>
         <con:value>"2.280227"</con:value>
      </con:property>
      <con:property>
         <con:name>long Mairie des Lilas (METRO)</con:name>
         <con:value>"2.416453"</con:value>
      </con:property>
      <con:property>
         <con:name>long Choisy-le-Roi (RER)</con:name>
         <con:value>"2.410198"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Gambetta (METRO)</con:name>
         <con:value>"48.864944"</con:value>
      </con:property>
      <con:property>
         <con:name>long Gallieni (METRO)</con:name>
         <con:value>"2.416696"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Porte des Lilas (METRO)</con:name>
         <con:value>"48.876884"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Saint-Germain en-Laye (RER)</con:name>
         <con:value>"48.898050"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Créteil Pointe du lac (METRO)</con:name>
         <con:value>"48.769000"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Porte de Clignancourt (METRO)</con:name>
         <con:value>"48.897448"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Creil (RER)</con:name>
         <con:value>"49.263247"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Gambetta  (METRO)</con:name>
         <con:value>"48.864944"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Mairie des Lilas (METRO)</con:name>
         <con:value>"48.879867"</con:value>
      </con:property>
      <con:property>
         <con:name>lat La courneuve (METRO)</con:name>
         <con:value>"48.920773"</con:value>
      </con:property>
      <con:property>
         <con:name>long Creil (RER)</con:name>
         <con:value>"2.468880"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Porte de Versailles (TRAM)</con:name>
         <con:value>"48.832125"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Saint-Lazare (METRO)</con:name>
         <con:value>"48.875581"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Porte de la Chappelle (TRAM)</con:name>
         <con:value>"48.898469"</con:value>
      </con:property>
      <con:property>
         <con:name>long Porte de la Chappelle (TRAM)</con:name>
         <con:value>"2.359280"</con:value>
      </con:property>
      <con:property>
         <con:name>long Saint-Germain en-Laye (RER)</con:name>
         <con:value>"2.094819"</con:value>
      </con:property>
      <con:property>
         <con:name>long Gare d'Austerlitz (METRO)</con:name>
         <con:value>"2.364554"</con:value>
      </con:property>
      <con:property>
         <con:name>long Olympiades (METRO)</con:name>
         <con:value>"2.365934"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Mairie de Montrouge (METRO)</con:name>
         <con:value>"48.818145"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Mairie d'ivry  (METRO)</con:name>
         <con:value>"48.811034"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Châtelet (METRO)</con:name>
         <con:value>"48.858480"</con:value>
      </con:property>
      <con:property>
         <con:name>long Saint-Denis Porte de Paris (TRAM)</con:name>
         <con:value>"2.357155"</con:value>
      </con:property>
      <con:property>
         <con:name>long Boissy-St-Léger (RER)</con:name>
         <con:value>"2.504287"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Viroflay Rive-droite (TRAM)</con:name>
         <con:value>"48.805678"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Malesherbes (RER)</con:name>
         <con:value>"48.293730"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Viroflay Rive-gauche (RER)</con:name>
         <con:value>"48.800443"</con:value>
      </con:property>
      <con:property>
         <con:name>long Marne la vallée (RER)</con:name>
         <con:value>"2.781890"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Boissy-St-Léger (RER)</con:name>
         <con:value>"48.753759"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Poissy (RER)</con:name>
         <con:value>"48.932621"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Place d'Italie (METRO)</con:name>
         <con:value>"48.830933"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Pont de Bezons (TRAM)</con:name>
         <con:value>"48.923340"</con:value>
      </con:property>
      <con:property>
         <con:name>long Châtelet (METRO)</con:name>
         <con:value>"2.347334"</con:value>
      </con:property>
      <con:property>
         <con:name>long Mairie d'issy (METRO)</con:name>
         <con:value>"2.272989"</con:value>
      </con:property>
      <con:property>
         <con:name>long Château de Vincennes (METRO)</con:name>
         <con:value>"2.439313"</con:value>
      </con:property>
      <con:property>
         <con:name>long Cergy (RER)</con:name>
         <con:value>"2.012213"</con:value>
      </con:property>
      <con:property>
         <con:name>long Saint-Denis Université (METRO)</con:name>
         <con:value>"2.364655"</con:value>
      </con:property>
      <con:property>
         <con:name>long Chatillon-Montrouge (METRO)</con:name>
         <con:value>"2.300834"</con:value>
      </con:property>
      <con:property>
         <con:name>long Gambetta  (METRO)</con:name>
         <con:value>"2.397155"</con:value>
      </con:property>
      <con:property>
         <con:name>long Viroflay Rive-gauche (RER)</con:name>
         <con:value>"2.171365"</con:value>
      </con:property>
      <con:property>
         <con:name>long Mairie de Montreuil (METRO)</con:name>
         <con:value>"2.441556"</con:value>
      </con:property>
      <con:property>
         <con:name>long La courneuve (METRO)</con:name>
         <con:value>"2.410671"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Epinay sur-Seine (RER)</con:name>
         <con:value>"48.954025"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Chelles Gournay (RER)</con:name>
         <con:value>"48.874555"</con:value>
      </con:property>
      <con:property>
         <con:name>lat Olympiades (METRO)</con:name>
         <con:value>"48.826958"</con:value>
      </con:property>
      <con:property>
         <con:name>long Melun (RER)</con:name>
         <con:value>"2.655494"</con:value>
      </con:property>
    </con:properties>
		
		</con:testCase>
        
		<con:properties/>
	</con:testSuite>
	<con:properties/>
	<con:wssContainer/>
	<con:oAuth2ProfileContainer/>
</con:soapui-project>